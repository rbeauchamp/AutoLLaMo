root = true
# To learn more about .editorconfig see https://aka.ms/editorconfigdocs
###############################
# Core EditorConfig Options   #
###############################
# All files
[*]
indent_style = space

# ReSharper properties
resharper_arguments_literal = named
resharper_csharp_insert_final_newline = true
resharper_csharp_max_line_length = 100
resharper_csharp_wrap_after_invocation_lpar = true
resharper_csharp_wrap_arguments_style = chop_always
resharper_csharp_wrap_before_binary_opsign = true
resharper_csharp_wrap_parameters_style = chop_if_long
resharper_instance_members_qualify_declared_in = base_class
resharper_keep_existing_arrangement = false
resharper_max_enum_members_on_line = 1
resharper_max_formal_parameters_on_line = 2
resharper_max_invocation_arguments_on_line = 1
resharper_parentheses_redundancy_style = remove
resharper_wrap_multiple_type_parameter_constraints_style = chop_always
resharper_wrap_parameters_style = wrap_if_long
# resharper_csharp_wrap_lines = false
resharper_keep_existing_declaration_parens_arrangement = false
resharper_keep_existing_embedded_block_arrangement = false
resharper_keep_existing_expr_member_arrangement = false
resharper_keep_existing_linebreaks = false
resharper_keep_existing_switch_expression_arrangement = false
resharper_place_accessorholder_attribute_on_same_line = false
resharper_place_field_attribute_on_same_line = false
resharper_place_linq_into_on_new_line = false
resharper_place_simple_embedded_statement_on_same_line = false
resharper_place_simple_initializer_on_single_line = false
resharper_wrap_after_declaration_lpar = true
resharper_wrap_after_invocation_lpar = true
resharper_wrap_arguments_style = wrap_if_long
resharper_wrap_array_initializer_style = chop_always
resharper_wrap_before_linq_expression = true
resharper_wrap_chained_binary_expressions = chop_if_long
resharper_wrap_chained_method_calls = wrap_if_long
resharper_wrap_linq_expressions = chop_always
resharper_wrap_object_and_collection_initializer_style = chop_always
resharper_wrap_property_pattern = wrap_if_long

# Microsoft .NET properties
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_between_query_expression_clauses = true

# Code files
[*.{cs,csx,vb,vbx}]
insert_final_newline = true
###############################
# .NET Coding Conventions     #
###############################
[*.{cs,vb}]
# Organize usings
dotnet_sort_system_directives_first = true
# this. preferences
dotnet_style_qualification_for_field = false:silent
dotnet_style_qualification_for_property = false:silent
dotnet_style_qualification_for_method = false:silent
dotnet_style_qualification_for_event = false:silent
# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members = true:warning
dotnet_style_predefined_type_for_member_access = true:warning
# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent
# Modifier preferences
dotnet_style_require_accessibility_modifiers = for_non_interface_members:silent
dotnet_style_readonly_field = true:warning
# Expression-level preferences
dotnet_style_object_initializer = true:warning
dotnet_style_collection_initializer = true:warning
dotnet_style_explicit_tuple_names = true:warning
dotnet_style_null_propagation = true:suggestion
dotnet_style_coalesce_expression = true:warning
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:warning
dotnet_style_prefer_inferred_tuple_names = true:warning
dotnet_style_prefer_inferred_anonymous_type_member_names = true:warning
dotnet_style_prefer_auto_properties = true:warning
dotnet_style_prefer_conditional_expression_over_assignment = true:suggestion
dotnet_style_prefer_conditional_expression_over_return = true:none
# CS1591: Missing XML comment for publicly visible type or member
dotnet_diagnostic.cs1591.severity = none
###############################
# Naming Conventions          #
###############################
# Style Definitions
dotnet_naming_style.pascal_case_style.capitalization = pascal_case
# Use PascalCase for constant fields
dotnet_naming_rule.constant_fields_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.constant_fields_should_be_pascal_case.symbols = constant_fields
dotnet_naming_rule.constant_fields_should_be_pascal_case.style = pascal_case_style
dotnet_naming_symbols.constant_fields.applicable_kinds = field
dotnet_naming_symbols.constant_fields.applicable_accessibilities = *
dotnet_naming_symbols.constant_fields.required_modifiers = const
dotnet_style_prefer_simplified_boolean_expressions = true:warning
dotnet_style_prefer_compound_assignment = true:warning
dotnet_style_prefer_simplified_interpolation = true:warning
dotnet_style_namespace_match_folder = true:warning
dotnet_style_operator_placement_when_wrapping = beginning_of_line
tab_width = 4
dotnet_diagnostic.ca1303.severity = silent
dotnet_diagnostic.ca1307.severity = silent
dotnet_diagnostic.ca1308.severity = silent
dotnet_diagnostic.ca2101.severity = silent
dotnet_style_allow_multiple_blank_lines_experimental = true:silent
dotnet_style_allow_statement_immediately_after_block_experimental = true:silent
dotnet_code_quality_unused_parameters = all:suggestion
dotnet_diagnostic.ca1305.severity = silent
indent_size = 4
end_of_line = crlf
###############################
# C# Coding Conventions       #
###############################
[*.cs]
# var preferences
csharp_style_var_for_built_in_types = true:warning
csharp_style_var_when_type_is_apparent = true:warning
csharp_style_var_elsewhere = true:warning
# Expression-bodied members
csharp_style_expression_bodied_methods = false:silent
csharp_style_expression_bodied_constructors = false:silent
csharp_style_expression_bodied_operators = false:silent
csharp_style_expression_bodied_properties = true:warning
csharp_style_expression_bodied_indexers = true:warning
csharp_style_expression_bodied_accessors = true:warning
# Pattern matching preferences
csharp_style_pattern_matching_over_is_with_cast_check = true:warning
csharp_style_pattern_matching_over_as_with_null_check = true:warning
# Null-checking preferences
csharp_style_throw_expression = true:warning
csharp_style_conditional_delegate_call = true:warning
# Modifier preferences
csharp_preferred_modifier_order = public, private, protected, internal, static, extern, new, virtual, abstract, sealed, override, readonly, unsafe, volatile, async:suggestion
# Expression-level preferences
csharp_prefer_braces = true:warning
csharp_style_deconstructed_variable_declaration = true:warning
csharp_prefer_simple_default_expression = true:warning
csharp_style_pattern_local_over_anonymous_function = true:warning
csharp_style_inlined_variable_declaration = true:warning
###############################
# C# Formatting Rules         #
###############################
# New line preferences
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_anonymous_types = true
# Indentation preferences
csharp_indent_case_contents = true
csharp_indent_switch_labels = true
csharp_indent_labels = flush_left
# Space preferences
csharp_space_after_cast = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_around_binary_operators = before_and_after
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
# Wrapping preferences
csharp_preserve_single_line_statements = true
csharp_preserve_single_line_blocks = true
csharp_using_directive_placement = outside_namespace:silent
csharp_prefer_simple_using_statement = true:warning
csharp_style_expression_bodied_lambdas = true:none
csharp_style_expression_bodied_local_functions = false:silent
csharp_style_prefer_index_operator = true:suggestion
csharp_style_prefer_range_operator = true:suggestion
csharp_style_unused_value_assignment_preference = discard_variable
csharp_style_unused_value_expression_statement_preference = discard_variable
csharp_prefer_static_local_function = true:suggestion
csharp_style_prefer_pattern_matching = true:silent
csharp_style_prefer_switch_expression = true:suggestion
csharp_style_prefer_not_pattern = true:suggestion

# https://cezarypiatek.github.io/post/pure-functions-and-unused-return-value/
dotnet_diagnostic.ide0058.severity = none

# Default severity for analyzer diagnostics with category 'Globalization'
dotnet_analyzer_diagnostic.category-globalization.severity = silent

# CA2007: Consider calling ConfigureAwait on the awaited task
dotnet_diagnostic.ca2007.severity = none

# CA1310: Specify StringComparison for correctness
dotnet_diagnostic.ca1310.severity = none

# CA1031: Do not catch general exception types
dotnet_diagnostic.ca1031.severity = none

# Default severity for analyzer diagnostics with category 'Naming'
dotnet_analyzer_diagnostic.category-naming.severity = none

# CA2227: Collection properties should be read only
dotnet_diagnostic.ca2227.severity = none

# CA1056: URI-like properties should not be strings
dotnet_diagnostic.ca1056.severity = none

# CA1054: URI-like parameters should not be strings
dotnet_diagnostic.ca1054.severity = none

# CA1724: Type names should not match namespaces
dotnet_diagnostic.ca1724.severity = none

# CA1062: Validate arguments of public methods
dotnet_diagnostic.ca1062.severity = none

# CA1307: Specify StringComparison for clarity
dotnet_diagnostic.ca1307.severity = none

# CA1002: Do not expose generic lists
dotnet_diagnostic.ca1002.severity = none

# Rosylynator
# Set severity for all analyzers that are enabled by default (https://docs.microsoft.com/en-us/visualstudio/code-quality/use-roslyn-analyzers?view=vs-2022#set-rule-severity-of-multiple-analyzer-rules-at-once-in-an-editorconfig-file)
dotnet_analyzer_diagnostic.category-roslynator.severity = warning

# Enable/disable all refactorings
roslynator_refactorings.enabled = true

# Enable/disable all compiler diagnostic fixes
roslynator_compiler_diagnostic_fixes.enabled = true

# RCS1141: Add 'param' element to documentation comment.
dotnet_diagnostic.rcs1141.severity = none

# RCS1181: Convert comment to documentation comment.
dotnet_diagnostic.rcs1181.severity = none

# S101: Types should be named in PascalCase
dotnet_diagnostic.s101.severity = none

# S125: Sections of code should not be commented out
dotnet_diagnostic.s125.severity = suggestion

# RCS1205: Order named arguments according to the order of parameters.
dotnet_diagnostic.rcs1205.severity = suggestion

# CS0162: Unreachable code detected
dotnet_diagnostic.cs0162.severity = warning

# S1135: Track uses of "TODO" tags
dotnet_diagnostic.s1135.severity = suggestion

# S3358: Ternary operators should not be nested
dotnet_diagnostic.s3358.severity = none

# S4581: "new Guid()" should not be used
dotnet_diagnostic.s4581.severity = none

# CS4014: Because this call is not awaited, execution of the current method continues before the call is completed
dotnet_diagnostic.cs4014.severity = error

# RCS1201: Use method chaining.
dotnet_diagnostic.rcs1201.severity = none

# RCS1093: Remove file with no code.
dotnet_diagnostic.rcs1093.severity = suggestion

# RCS1021: Convert lambda expression body to expression body.
dotnet_diagnostic.rcs1021.severity = none

# MA0004: Use Task.ConfigureAwait(false)
dotnet_diagnostic.ma0004.severity = none
csharp_style_namespace_declarations = block_scoped:silent
csharp_style_prefer_method_group_conversion = true:silent
csharp_style_prefer_top_level_statements = true:silent

# MA0051: Method is too long
dotnet_diagnostic.ma0051.severity = none

# MA0076: Do not use implicit culture-sensitive ToString in interpolated strings
dotnet_diagnostic.ma0076.severity = none

# MA0006: Use String.Equals instead of equality operator
dotnet_diagnostic.ma0006.severity = none

# MA0074: Avoid implicit culture-sensitive methods
dotnet_diagnostic.ma0074.severity = none

# RCS1197: Optimize StringBuilder.Append/AppendLine call.
dotnet_diagnostic.rcs1197.severity = none

# MA0002: IEqualityComparer<string> or IComparer<string> is missing
dotnet_diagnostic.ma0002.severity = none

# MA0001: StringComparison is missing
dotnet_diagnostic.ma0001.severity = none

# S1481: Unused local variables should be removed
dotnet_diagnostic.s1481.severity = suggestion

# RCS1163: Unused parameter.
dotnet_diagnostic.rcs1163.severity = suggestion

# S1172: Unused method parameters should be removed
dotnet_diagnostic.s1172.severity = suggestion

# MA0011: IFormatProvider is missing
dotnet_diagnostic.ma0011.severity = none

# MA0016	Prefer returning collection abstraction instead of implementation
dotnet_diagnostic.ma0016.severity = none

# MA0016	TODO
dotnet_diagnostic.ma0026.severity = suggestion

# S2094: Classes should not be empty
dotnet_diagnostic.s2094.severity = none

# RCS1124: Inline local variable.
dotnet_diagnostic.rcs1124.severity = suggestion

# MA0049: Type name should not match containing namespace
dotnet_diagnostic.ma0049.severity = none
